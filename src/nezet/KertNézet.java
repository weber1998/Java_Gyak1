/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nezet;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import modell.Kert;
import modell.Növény;

/**
 *
 * @author krisz
 */
public class KertNézet extends javax.swing.JFrame {

    /**
     * Creates new form KertNézet
     */
    
    private Kert kert;
    private JComboBox<String> plantNameComboBox;
    private JComboBox<String> plantIdComboBox;
    private JLabel ageLabel;
    
    public KertNézet() {
        
        super("Kert alkalmazás");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Kert inicializálása
        loadGardenState();

        JPanel panel = new JPanel(new GridLayout(4, 2, 20, 20));

        // Növény nevek lenyíló menü
        List<String> plantNames = new ArrayList<>();
        for (Növény növény : kert.összesNövény()) {
            plantNames.add(növény.getNév());
        }
        plantNameComboBox = new JComboBox<>(plantNames.toArray(new String[0]));
        panel.add(new JLabel("Növény neve:"));
        panel.add(plantNameComboBox);

        // Növény azonosítók lenyíló menü
        List<String> plantIds = new ArrayList<>();
        for (Növény növény : kert.összesNövény()) {
            plantIds.add(növény.getId());
        }
        plantIdComboBox = new JComboBox<>(plantIds.toArray(new String[0]));
        panel.add(new JLabel("Növény azonosító:"));
        panel.add(plantIdComboBox);

        // Növény korának megjelenítése
        ageLabel = new JLabel();
        panel.add(new JLabel("Növény kor:"));
        panel.add(ageLabel);

        JButton addButton = new JButton("Új növény hozzáadása");
        JButton sellButton = new JButton("Növény eladása");
        JButton statsButton = new JButton("Statisztika generálása");
        JButton updateButton = new JButton("Kert frissítése");

        panel.add(addButton);
        panel.add(sellButton);
        panel.add(statsButton);
        panel.add(updateButton);

        getContentPane().add(panel);

        // Eseménykezelő a növény kiválasztásához
        ActionListener plantSelectionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedPlantName = (String) plantNameComboBox.getSelectedItem();
                String selectedPlantId = (String) plantIdComboBox.getSelectedItem();
                displayPlantAge(selectedPlantName, selectedPlantId);
            }
        };
        plantNameComboBox.addActionListener(plantSelectionListener);
        plantIdComboBox.addActionListener(plantSelectionListener);

        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        
        initComponents();
    }
    
    private void loadGardenState() {
        try {
            FileInputStream fileIn = new FileInputStream("kert.bin");
            ObjectInputStream objIn = new ObjectInputStream(fileIn);
            kert = (modell.Kert) objIn.readObject();
            objIn.close();
            fileIn.close();
            System.out.println("Kert állapot sikeresen betöltve.");
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("Hiba történt a kert állapotának betöltésekor: " + e.getMessage());
            // Ha hiba történik a betöltésnél, létrehozunk egy új kertet
            kert = new Kert();
        }
    }
    
    private void displayPlantAge(String selectedPlantName, String selectedPlantId) {
    Növény selectedPlant = null;
    for (Növény növény : kert.összesNövény()) {
        if (növény.getNév().equals(selectedPlantName) && növény.getId().equals(selectedPlantId)) {
            selectedPlant = növény;
            break;
        }
    }

    if (selectedPlant != null) {
        ageLabel.setText(String.valueOf(selectedPlant.getKor()));
    } else {
        ageLabel.setText("");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 446, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KertNézet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KertNézet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KertNézet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KertNézet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KertNézet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
